{"version":3,"sources":["components/constants.js","components/TasksFilter.js","components/Footer.js","components/Header.js","components/Task.js","components/TaskList.js","components/App.js","index.js"],"names":["ENTER","status","ALL","ACTIVE","COMPLETED","TasksFilter","changeFilter","filter","className","Object","values","map","item","cn","selected","onClick","Footer","deleteCompletedtask","count","Header","addTask","placeholder","autoFocus","onKeyDown","e","key","target","value","trim","Task","id","description","created","editing","done","changeStatusTask","deleteTask","startEditTask","finishEditTask","dataTime","Date","type","defaultChecked","formatDistanceToNow","includeSeconds","defaultValue","onBlur","TaskList","tasks","generateKey","pre","getTime","App","state","filterTask","newTasks","setState","newTask","text","renderList","term","localStorage","setItem","JSON","stringify","this","data","parse","getItem","renderListItem","length","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.33d15c32.chunk.js","sourcesContent":["export  const ENTER = 'Enter';\r\n\r\nexport const status = {\r\n  ALL: 'All',\r\n  ACTIVE: 'Active',\r\n  COMPLETED: 'Completed'\r\n };","import React from \"react\";\r\nimport cn from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport { status } from './constants';\r\n\r\n\r\nconst TasksFilter = ({ changeFilter, filter }) => {\r\n  return (\r\n    <ul className=\"filters\">\r\n      {\r\n        Object.values(status).map( item => {\r\n\r\n          const className = cn({\r\n            selected: item === filter\r\n          })\r\n\r\n          return (\r\n            <li key={item} >\r\n              <button className={className} onClick={() => changeFilter(item)}> \r\n                {item}\r\n              </button>\r\n            </li>\r\n          );\r\n        })\r\n      }\r\n    </ul>\r\n  );\r\n};\r\n\r\nTasksFilter.propTypes = {\r\n  changeFilter: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default TasksFilter;\r\n","import React from \"react\";\r\nimport TasksFilter from './TasksFilter';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Footer = ({ changeFilter, filter, deleteCompletedtask, count }) => {\r\n  return (\r\n    <footer className=\"footer\">\r\n      <span className=\"todo-count\">{count} items left</span>\r\n      <TasksFilter \r\n        changeFilter={changeFilter} \r\n        filter={filter}\r\n      />\r\n      <button \r\n        className=\"clear-completed\"\r\n        onClick={deleteCompletedtask}\r\n      >Clear completed</button>\r\n    </footer>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  count: PropTypes.number.isRequired,\r\n  changeFilter: PropTypes.func.isRequired,\r\n  filter: PropTypes.string.isRequired,\r\n  deleteCompletedtask: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport { ENTER } from \"./constants\";\r\n\r\n\r\nconst Header = ({addTask}) => {\r\n\r\n  function addnewTask(e) {\r\n\r\n    if (e.key === ENTER) {\r\n      addTask(e.target.value.trim());\r\n      e.target.value = '';\r\n    }\r\n  }\r\n\r\n  return (\r\n    <header className=\"header\">\r\n      <h1>todos</h1>\r\n      <input className=\"new-todo\" placeholder=\"What needs to be done?\" autoFocus  onKeyDown={addnewTask}/>\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  addTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport cn from 'classnames';\r\nimport { formatDistanceToNow } from 'date-fns';\r\nimport PropTypes from 'prop-types';\r\nimport { ENTER } from \"./constants\";\r\n\r\nconst Task = ({ id, description, created, editing, done, changeStatusTask, deleteTask, startEditTask, finishEditTask  }) => {\r\n\r\n  const className = cn({\r\n    'completed': done && !editing,\r\n    'active': !done && !editing,\r\n    'editing': editing\r\n  })\r\n\r\n  function editTask(e) {\r\n\r\n    if (e.key === ENTER) {\r\n      finishEditTask(id , e.target.value.trim());\r\n      e.target.value = '';\r\n    }\r\n  }\r\n  let dataTime = created\r\n\r\n  if (!(dataTime instanceof Date)) {\r\n    dataTime = new Date(dataTime)\r\n  } \r\n\r\n  return (\r\n\r\n    <li className={className}>\r\n      <div className=\"view\">\r\n        <input className=\"toggle\" type=\"checkbox\" onClick={() => changeStatusTask(id)} defaultChecked={done}/>\r\n        <label>\r\n          <span className=\"description\">{description}</span>\r\n          <span className=\"created\">created: {formatDistanceToNow(dataTime, { includeSeconds: true })}</span>\r\n        </label>\r\n        <button className=\"icon icon-edit\" onClick={() => startEditTask(id)}></button>\r\n        <button className=\"icon icon-destroy\" onClick={() => deleteTask(id)}></button>\r\n      </div>\r\n      { editing && <input type=\"text\" className=\"edit\" defaultValue={description} onKeyDown={editTask} autoFocus onBlur={() => finishEditTask(id, description)} /> }\r\n    </li>\r\n  );\r\n};\r\n\r\nTask.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  editing: PropTypes.bool.isRequired,\r\n  status: PropTypes.string,\r\n  done: PropTypes.bool.isRequired,\r\n  changeStatusTask: PropTypes.func.isRequired,\r\n  deleteTask: PropTypes.func.isRequired,\r\n  startEditTask: PropTypes.func.isRequired,\r\n  finishEditTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Task;","import React from \"react\";\r\nimport Task from './Task';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nconst TaskList = ({ tasks, changeStatusTask, deleteTask, startEditTask, finishEditTask }) => {\r\n\r\n\r\n  return (\r\n    <ul className=\"todo-list\">\r\n      {\r\n        tasks.map( (item) => {\r\n          const { id } = item\r\n          return (\r\n          <Task key={id} {...item} \r\n            changeStatusTask={changeStatusTask} \r\n            deleteTask={deleteTask}\r\n            startEditTask={startEditTask}\r\n            finishEditTask={finishEditTask}\r\n          />\r\n          );\r\n        })\r\n      }\r\n    </ul>\r\n  );\r\n};\r\n\r\nTaskList.propTypes = {\r\n  tasks: PropTypes.array.isRequired,\r\n  changeStatusTask: PropTypes.func.isRequired,\r\n  deleteTask: PropTypes.func.isRequired,\r\n  startEditTask: PropTypes.func.isRequired,\r\n  finishEditTask: PropTypes.func.isRequired\r\n};\r\n\r\nexport default TaskList;\r\n","import React from \"react\";\nimport Footer from \"./Footer\";\nimport Header from \"./Header\";\nimport TaskList from \"./TaskList\";\n\n\nconst generateKey = (pre) => {\n  return `${ pre }_${ new Date().getTime() }`;\n}\n\n\nclass App extends React.Component {\n\n  state = {\n    tasks : [],\n    filterTask: 'All'\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem('data', JSON.stringify(this.state))\n  }\n\n  componentDidMount() {\n    const data = JSON.parse(localStorage.getItem('data'))\n    this.setState({\n      ...data\n    })\n  }\n\n\n  changeStatusTask = (id) => {\n    const oldTasks = [...this.state.tasks]\n\n    const newTasks = oldTasks.map(item => {\n      if (item.id === id) {\n        return {...item, done: !item.done}\n      }\n      return item;\n    })\n\n    this.setState({\n      tasks: newTasks\n    })\n  }\n  \n  deleteTask = (id) => {\n\n    const oldTasks = [...this.state.tasks]\n\n    const newTasks = oldTasks.filter(item => item.id !== id)\n\n    this.setState({\n      tasks: newTasks\n    })\n    \n  }\n\n  deleteCompletedtask = () => {\n    const oldTasks = [...this.state.tasks];\n    const newTasks = oldTasks.filter(item => !item.done)\n    this.setState({\n      tasks: newTasks\n    })\n  }\n\n  addTask = (description) => {\n\n    const newTask = {\n      editing: false,\n      id: generateKey(description),\n      created: new Date(),\n      description,\n      done: false\n    }\n\n    this.setState({\n      tasks: [...this.state.tasks, newTask]\n    })\n\n  }\n\n  startEditTask = (id) => {\n    const oldTasks = [...this.state.tasks]\n\n    const newTasks = oldTasks.map(item => {\n      if (item.id === id) {\n        return {...item, editing: true}\n      }\n      return item;\n    })\n\n    this.setState({\n      tasks: newTasks\n    })\n  }\n\n  finishEditTask = (id, text) => {\n    const oldTasks = [...this.state.tasks]\n\n    const newTasks = oldTasks.map(item => {\n      if (item.id === id) {\n        return {...item, editing: false, description: text}\n      }\n      return item;\n    })\n\n    this.setState({\n      tasks: newTasks\n    })\n  }\n\n\n  renderList = () => {\n\n    const filter = this.state.filterTask\n\n    switch (filter) {\n      case 'All' : return this.state.tasks;\n      case 'Active': return this.state.tasks.filter(item => !item.done);\n      case 'Completed': return this.state.tasks.filter(item => item.done);\n      default: return this.state.tasks;\n    }\n  }\n\n  changeFilter = (term) => {\n    this.setState({\n      filterTask: term\n    })\n  }\n\n  render() {\n\n    const renderListItem = this.renderList();\n\n    const count = this.state.tasks.filter(item => !item.done).length;\n\n    return (\n      <section className=\"todoapp\">\n        <Header addTask={this.addTask}/>\n        <section className=\"main\">\n          {\n            renderListItem.length > 0 ? \n              <TaskList \n              startEditTask={this.startEditTask}\n              finishEditTask={this.finishEditTask}\n              tasks={renderListItem} \n              changeStatusTask={this.changeStatusTask} \n              deleteTask={this.deleteTask} \n              />\n              :\n              <h2>there's no todos yet</h2>\n          }\n          <Footer \n            changeFilter={this.changeFilter} \n            filter={this.state.filterTask} \n            deleteCompletedtask={this.deleteCompletedtask}\n            count={count}\n          />\n        </section>\n      </section>\n    );\n  }\n}\n\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\n\n\n\n\nReactDOM.render(<App  />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}